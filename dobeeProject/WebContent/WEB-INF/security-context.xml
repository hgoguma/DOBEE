<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  					 http://www.springframework.org/schema/beans/spring-beans.xsd
  					 http://www.springframework.org/schema/context 
        			 http://www.springframework.org/schema/context/spring-context.xsd
 					 http://www.springframework.org/schema/security
 					 http://www.springframework.org/schema/security/spring-security.xsd">
	
	<context:annotation-config/>
	
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true"/>
		<security:form-login login-page="/login.do"
							default-target-url="/main.do"
							username-parameter="mail"
							authentication-success-handler-ref="loginHandler"
							authentication-failure-url="/login.do?error"/>
							
  		<security:intercept-url pattern="/main.do" access="hasAnyRole('ROLE_USER','ROLE_MANAGER')"/>
  		<security:intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
  		
  		<security:logout logout-success-url="/login.do" invalidate-session="true"/>
  		
  		 <security:session-management invalid-session-url="/login.do" session-fixation-protection="migrateSession">
        	<security:concurrency-control max-sessions="1" expired-url="/login.do"/>
        </security:session-management>
	</security:http>
	
	<!-- <bean id="bycryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->
	
	<!-- <security:authentication-manager>
    	<security:authentication-provider>
	      	<security:user-service>
	      		<security:user name="manager@dobee.com" password="1004" authorities="ROLE_USER"/>
	       		<security:user name="admin@dobee.com" password="1004" authorities="ROLE_ADMIN,ROLE_USER"/>
	      	</security:user-service>
	      	<security:password-encoder ref="bycryptPasswordEncoder"/>
    	</security:authentication-provider>
 	</security:authentication-manager> -->
	
	<security:authentication-manager>
        <security:authentication-provider>
            <!-- &lt;!&ndash; -->
            <security:jdbc-user-service data-source-ref="driverManagerDataSource"
                                        users-by-username-query="SELECT MAIL, PASSWORD, 1 enabled FROM USER where MAIL=?"

                                        authorities-by-username-query="SELECT U.MAIL , A.AUTH AS ROLL_NAME
           								                                FROM USER U join AUTHORITY A
          								                                ON U.AUTHCODE = A.AUTHCODE
           								                                WHERE U.MAIL=?"/>
           								                                <!-- &ndash;&gt; -->
            <!-- <security:password-encoder ref="bCryptPasswordEncoder"/> -->
        </security:authentication-provider>
    </security:authentication-manager>
	
	<!-- 로그인 처리 핸들러 빈 -->
	 <bean id="loginHandler" class="com.dobee.handler.LoginHandler"/>
	 <!-- <bean id="loginFailureHandler" class="com.dobee.handler.LoginHandler"/> -->
   
    <!--<security:http>
        <security:csrf disabled="true"/>
        <security:form-login default-target-url="/index.htm"
                             login-page="/joinus/login.htm"
                             authentication-failure-url="/joinus/login.htm?error"/>
        <security:logout logout-success-url="/index.htm"/>
        <security:intercept-url pattern="" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="" access="hasRole('ROLE_ADMIN')"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
            &lt;!&ndash;<security:jdbc-user-service data-source-ref="driverManagerDataSource"
                                        users-by-username-query="SELECT USERID, pwd AS PASSWORD, 1 enabled FROM member where userid=?"

                                        authorities-by-username-query="select m.USERID , r.ROLE_NAME
           								                                from member m join roll r
          								                                on m.userid = r.userid
           								                                where m.userid=?"/>&ndash;&gt;
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>-->

</beans>

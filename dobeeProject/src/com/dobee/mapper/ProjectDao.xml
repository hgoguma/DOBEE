<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dobee.dao.ProjectDao">
	
	<!-- 모든 진행중인 프로젝트 리스트 가져오기 pm 회원용 -->
	<select id="getAllInProgressPjtList" resultType="com.dobee.vo.project.Project">
		SELECT PJTSEQ, PJTNAME, PJTSTARTAT, PJTENDAT, PJTPROGRESS 
			FROM PROJECT 
			WHERE PJTPROGRESS='진행'
		ORDER BY PJTSEQ DESC
	</select>
	
	<!-- 모든 완료된 프로젝트 목록 가져오기 pm 회원용 02.03.알파카  -->
	<select id="getAllCompletedPjtList" resultType="com.dobee.vo.project.Project">
		SELECT PJTSEQ, PJTNAME, PJTSTARTAT, PJTENDAT, PJTPROGRESS 
			FROM PROJECT 
			WHERE PJTPROGRESS='완료'
		ORDER BY PJTSEQ DESC
	</select>
	
	<!-- 특정 회원이 속한 프로젝트 리스트 가져오기 -->
	<select id ="getPjtList" resultType="com.dobee.vo.project.Project">
		SELECT P.PJTSEQ, P.PJTNAME, P.PJTSTARTAT, PJTENDAT, PJTPROGRESS
			FROM USER U
				JOIN PROJECTMEMBER PM
				ON U.MAIL = PM.MAIL
				JOIN PROJECT P
				ON PM.PJTSEQ = P.PJTSEQ
			WHERE U.MAIL = #{mail}
		ORDER BY PJTSEQ DESC
	</select>
	
	<!-- 특정 회원이 속한 진행중인 프로젝트 목록 가져오기 -->
	<select id="getInProgressPjtList" resultType="com.dobee.vo.project.Project">
		SELECT P.PJTSEQ, P.PJTNAME, P.PJTSTARTAT, PJTENDAT, PJTPROGRESS
			FROM USER U
				JOIN PROJECTMEMBER PM
				ON U.MAIL = PM.MAIL
				JOIN PROJECT P
				ON PM.PJTSEQ = P.PJTSEQ
			WHERE U.MAIL = #{mail} AND P.PJTPROGRESS = '진행'
		ORDER BY PJTSEQ DESC
	</select>
	
	<select id="getCompletedPjtList" resultType="com.dobee.vo.project.Project">
		SELECT P.PJTSEQ, P.PJTNAME, P.PJTSTARTAT, PJTENDAT, PJTPROGRESS
			FROM USER U
				JOIN PROJECTMEMBER PM
				ON U.MAIL = PM.MAIL
				JOIN PROJECT P
				ON PM.PJTSEQ = P.PJTSEQ
			WHERE U.MAIL = #{mail} AND P.PJTPROGRESS = '완료'
		ORDER BY PJTSEQ DESC
	</select>
	
	<!-- 특정 프로젝트의 전체 task 개수 가져오기 02.03 알파카 -->
	<select id="getAllTaskCount" resultType="Integer">
		SELECT COUNT(*) 
			FROM PROJECT P 
				JOIN TASK T 
				ON P.PJTSEQ = T.PJTSEQ 
			WHERE P.PJTSEQ = #{param1}
	</select>
	
	<!-- 특정 프로젝트의 전체 task 중 완료된 개수 가져오기 02.03 알파카 -->
	<select id="getCompletedTaskCount" resultType="Integer">
		SELECT COUNT(*) 
			FROM PROJECT P
				JOIN TASK T 
				ON P.PJTSEQ = T.PJTSEQ 
			WHERE P.PJTSEQ = #{param1} AND T.PROGRESS='완료'
	</select>
	
	<!-- 프로젝트 생성 01.26 알파카 수정 -->
	<insert id="mkPjt" parameterType="com.dobee.vo.project.Project" useGeneratedKeys="true" keyProperty="pjtSeq"> 
		INSERT INTO PROJECT(PJTNAME, PJTSTARTAT, PJTENDAT, PJTPROGRESS) VALUES ( #{pjtName},#{pjtStartAt},#{pjtEndAt},'진행' )
	</insert>
	
	<!-- 프로젝트 생성시 참여 멤버 추가 01.26.알파카 수정 -->
	<insert id="mkPjtMember" parameterType="com.dobee.vo.project.ProjectMember">
		INSERT INTO PROJECTMEMBER(MAIL, PJTSEQ) VALUES (#{mail}, (SELECT PJTSEQ FROM PROJECT WHERE PJTSEQ=#{pjtSeq}))
	</insert>
	
	<!-- 프로젝트 삭제  01.15.알파카 -->
	<delete id="deletePjt" parameterType="integer">
		DELETE FROM PROJECT WHERE pjtSeq = #{pjtSeq}
	</delete>
	
	<!-- 프로젝트 수정 02.02 알파카 -->
	<update id="updatePjt">
		UPDATE PROJECT
			SET PJTNAME = #{pjtName},
				PJTSTARTAT = #{pjtStartAt},
				PJTENDAT = #{pjtEndAt},
				PJTPROGRESS = #{pjtProgress}
			WHERE PJTSEQ = #{pjtSeq}
	</update>
	
	<!-- 프로젝트 참여자 삭제 02.02 알파카-->
	<update id="deletePjtMember">
		DELETE FROM PROJECTMEMBER WHERE PJTSEQ = #{pjtSeq}
	</update>
	
	<!-- 프로젝트참여 멤버 삭제  01.15.알파카  -->
	<delete id="deleteMember" parameterType="integer">
		DELETE FROM PROJECTMEMBER WHERE pjtSeq = #{pjtSeq}
	</delete>
	
	<!-- 특정 프로젝트 가져오기   01.15.알파카  -->
	<select id="getPjt" resultType="com.dobee.vo.project.Project">
		SELECT PJTSEQ, PJTNAME, PJTSTARTAT, PJTENDAT, PJTPROGRESS FROM PROJECT WHERE PJTSEQ=#{pjtSeq}
	</select>
	
	<!-- 특정 프로젝트 멤버(이름, 메일) 가져오기 01.15.알파카 -->
	<select id="getPjtMember" resultType="com.dobee.vo.member.User">
		SELECT U.MAIL AS MAIL, U.NAME AS NAME 
			FROM USER U
				LEFT OUTER JOIN PROJECTMEMBER P
				ON U.MAIL = P.MAIL WHERE PJTSEQ=#{pjtSeq}
		ORDER BY BINARY(NAME)
	</select>
	
	<resultMap type="com.dobee.vo.project.Project" id="Project">
	    <result column="PJTSEQ" property="pjtSeq"/>
	    <result column="PJTNAME" property="pjtName"/>
	    <result column="PJTSTARTAT" property="pjtStartAt"/>
	    <result column="PJTENDAT" property="pjtEndAt"/>
	    <result column="PJTPROGRESS" property="pjtProgress"/>
	</resultMap>
	 
	<resultMap type="com.dobee.vo.project.Task" id="Task">
	    <result column="TSKSEQ" property="tSeq"/>
	    <result column="TITLE" property="title"/>
	    <result column="PROGRESS" property="progress"/>
	    <result column="IMPORTANT" property="important"/>
	    <result column="STARTAT" property="startAt"/>
	    <result column="ENDAT" property="endAt"/>
	    <result column="MAIL" property="mail"/>
	    <result column="PJTSEQ" property="pSeq"/>
	    <collection property="project" resultMap="Project"/>
	</resultMap>
	
	<select id ="getProject" resultType="com.dobee.vo.project.Task">
		SELECT p.PJTSEQ, t.PJTSEQ FROM PROJECT p 
			JOIN TASK t ON p.PJTSEQ = t.PJTSEQ 
			WHERE p.PJTSEQ = #{pjtSeq} 
	</select>
	
	
	<!-- 업무리스트 목록 조회 -->
	<select id="taskList" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL, PJTSEQ FROM TASK WHERE PJTSEQ = #{pjtSeq} ORDER BY TSKSEQ
	</select>
	
	
	<!-- 업무추가 PM 업무내용, 담당자, 중요도  01.24 알파카 수정 -->
	<!-- 기존 쿼리문 	INSERT INTO TASK (TITLE, MAIL, IMPORTANT, PJTSEQ, PROGRESS, STARTAT) VALUES(#{title},#{mail},#{important},#{pjtSeq},'예정', DATE_FORMAT(NOW(), "%Y-%c-%d"))
	 -->
	<insert id="addPMTask" parameterType="com.dobee.vo.project.Task" useGeneratedKeys="true" keyProperty="tskSeq">
		INSERT INTO TASK (TITLE, MAIL, IMPORTANT, PJTSEQ, PROGRESS, STARTAT) 
			VALUES(#{title},(SELECT MAIL FROM USER WHERE MAIL=#{mail}), #{important}, (SELECT PJTSEQ FROM PROJECT WHERE PJTSEQ=#{pjtSeq}),'예정', DATE_FORMAT(NOW(), "%Y-%c-%d"))
	</insert>
	
	
	<!-- 업무차가 담당자 날짜, 중요도, 상세내용, 체크리스ㅡ튼 -->
	<update id="addTask" parameterType="com.dobee.vo.project.Task">
		UPDATE TASK SET STARTAT=#{startAt} , ENDAT=#{endAt} , IMPORTANT=#{important} , PROGRESS=#{progress} WHERE TSKSEQ=#{tskSeq} 
	</update>
	
	
	<!-- 업무삭제 PM -->
	<delete id="pmTaskDelete">
		DELETE FROM TASK WHERE TSKSEQ=#{parma1}
	</delete>
	
	<!-- 특정업무 조회 -->
	<select id="getTask" resultType="com.dobee.vo.project.Task">
		SELECT T.TSKSEQ AS TSKSEQ, T.TITLE AS TITLE, T.PROGRESS AS PROGRESS, T.IMPORTANT AS IMPORTANT, DATE_FORMAT(T.STARTAT,'%Y-%c-%d') AS STARTAT, T.ENDAT AS ENDAT, T.MAIL AS MAIL, T.PJTSEQ AS PJTSEQ, U.NAME AS NAME
			FROM TASK T 
				JOIN USER U
				ON T.MAIL = U.MAIL
			WHERE T.TSKSEQ=#{tskSeq}
	</select>
	
	<!-- 특정업무 & 업무 일정 조회 -->
	<select id="getTaskAndSchedule" resultType="com.dobee.vo.project.Task">
		SELECT T.TSKSEQ AS TSKSEQ, T.TITLE AS TITLE, T.PROGRESS AS PROGRESS, T.IMPORTANT AS IMPORTANT, DATE_FORMAT(T.STARTAT,'%Y-%c-%d') AS STARTAT, T.ENDAT AS ENDAT, T.MAIL AS MAIL, T.PJTSEQ AS PJTSEQ, U.NAME AS NAME, S.TSSEQ AS TSSEQ
			FROM TASK T 
				JOIN USER U
				ON T.MAIL = U.MAIL
				JOIN TASKSCHEDULE S 
				ON T.TSKSEQ = S.TSKSEQ
			WHERE T.TSKSEQ=#{tskSeq}
	</select>
	
	
	<!-- 상세업무리스트 가져오기 -->
	<select id="getTaskDetailList" resultType="com.dobee.vo.project.TaskDetail">
		SELECT TDSEQ, TDCONTENT, TSKSEQ FROM TASKDETAIL WHERE TSKSEQ=#{tskSeq} ORDER BY TDSEQ
	</select>
	
	
	<!-- 상세업무추가 -->
	<insert id="addTaskDetail" useGeneratedKeys="true" keyProperty="tdSeq" >
		INSERT INTO TASKDETAIL (TDCONTENT, TSKSEQ) VALUES (#{tdContent}, #{tskSeq})
	</insert>
	
	
	<!-- 상세업무 수정 -->
	<update id="taskDetailEdit" parameterType="com.dobee.vo.project.TaskDetail">
		UPDATE TASKDETAIL SET TDCONTENT=#{tdContent} WHERE TDSEQ=#{tdSeq}
	</update>
	
	
	<!-- 상세업무 삭제 -->
	<delete id="taskDetailDelete">
		DELETE FROM TASKDETAIL WHERE TDSEQ=#{tdSeq}
	</delete>
	
	
	<!-- 담당자 업무 수정 -->
	<update id="editTask">
		UPDATE TASK SET TITLE=#{title}, PROGRESS=#{progress}, IMPORTANT=#{important}, STARTAT=#{startAt}, ENDAT=#{endAt}, MAIL=#{mail} WHERE TSKSEQ=#{tskSeq}
	</update>
	
	
	<!-- 체크리스트 추가  -->
	<insert id="addTaskCheckList" useGeneratedKeys="true" keyProperty="chkSeq">
		INSERT INTO CHECKLIST (CONTENT, TSKSEQ, ISCHECK) VALUES (#{content}, #{tskSeq}, 0)
	</insert>
	
	
	<!-- 체크리스트 가져오기 -->
	<select id="getTaskCheckList" resultType="com.dobee.vo.project.CheckList">
		SELECT CHKSEQ, CONTENT, ISCHECK, TSKSEQ FROM CHECKLIST WHERE TSKSEQ=#{tskSeq}
	</select>
	
	<!-- 체크리스트 내용만 수정 -->
	<update id="taskCheckListEditContent" parameterType="com.dobee.vo.project.CheckList">
		UPDATE CHECKLIST SET CONTENT=#{content} WHERE CHKSEQ=#{chkSeq}
	</update>
	
	<!-- 체크리스트 체크 여부 수정 -->
	<update id="taskCheckListIsCheck" parameterType="com.dobee.vo.project.CheckList">
		UPDATE CHECKLIST SET ISCHECK=#{isCheck} WHERE CHKSEQ=#{chkSeq}
	</update>
	
	<!-- 체크리스트 삭제 -->
	<delete id="taskCheckListDelete" parameterType="com.dobee.vo.project.CheckList">
		DELETE FROM CHECKLIST WHERE CHKSEQ=#{chkSeq}
	</delete>
	
	<!-- 특정 프로젝트에서 특정인의 업무량 가져오기  -->
	<select id="getMemberTaskCount" resultType="Integer">
		SELECT COUNT(*)
			FROM TASK
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2}
	</select>
	
	<!-- 특정 프로젝트의 개인 업무 가져오기 -->
	<select id="getMemberTask" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL, PJTSEQ
			FROM TASK
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2}
	</select>
	
	<!-- 특정 프로젝트의 개인 업무 중 마감일이 지난 업무 가져오기-->
	<select id="getOverdueTask" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL, PJTSEQ 
			FROM TASK 
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2} AND DATEDIFF(NOW(), ENDAT) <![CDATA[>]]> 0
	</select>
	
	<!-- 특정 프로젝트의 개인 업무 중 마감일이 3일 이하 남은 업무 가져오기 -->
	<select id="getDeadlineTask" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL 
			FROM TASK 
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2}
				AND PROGRESS !='완료'
				AND DATEDIFF(ENDAT, NOW()) <![CDATA[<=]]> 3 
				AND DATEDIFF(ENDAT, NOW()) <![CDATA[>]]> 0
	</select>
	
	<!-- 특정 프로젝트의 개인 업무 중 나머지 업무 가져오기 -->
	<select id="getOtherTask" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL, PJTSEQ 
			FROM TASK 
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2} 
				AND DATEDIFF(ENDAT, NOW()) <![CDATA[>=]]> 4 
				AND PROGRESS !='완료'
	</select>
	
	<!-- 특정 프로젝트의 개인의 완료된 업무 가져오기 -->
	<select id="getCompletedTaskList" resultType="com.dobee.vo.project.Task">
		SELECT TSKSEQ, TITLE, PROGRESS, IMPORTANT, STARTAT, ENDAT, MAIL, PJTSEQ
			FROM TASK
			WHERE PJTSEQ=#{param1} AND MAIL=#{param2} AND PROGRESS='완료'
	</select>
	
	<!--  특정 프로젝트의 구글 드라이브 목록 가져오기-->
	<select id="loadTimeline"  parameterType="Integer"  resultType="com.dobee.vo.project.GoogleDrive">
		SELECT * FROM GOOGLEDRIVE WHERE PJTSEQ = #{pjtSeq}
	</select>
	
	
	<!--  특정 프로젝트 구글드라이브 업로드  -->
	<insert id="addGoogleTag" parameterType="com.dobee.vo.project.GoogleDrive">
		INSERT INTO GOOGLEDRIVE (GDDATE, GDURL, MAIL, PJTSEQ, FILENAME)
			VALUES (#{gdDate}, #{gdUrl}, #{mail}, #{pjtSeq}, #{fileName}) 
	</insert>
	
	
	<!-- 마감임박 업무 리스트 GET			0131 게다죽 	~ing -->
	<select id="getUpcomingTask" parameterType="String" resultType="com.dobee.vo.project.UpcomingTask">
		SELECT P.PJTSEQ, DATE_FORMAT(T.ENDAT, '%m-%d') AS DATE, T.TITLE, T.PROGRESS, T.IMPORTANT, P.PJTNAME
			FROM TASK T
				JOIN PROJECT P ON T.PJTSEQ = P.PJTSEQ
			WHERE  MAIL=#{mail} AND T.PROGRESS !='완료' AND DATEDIFF(NOW(), ENDAT) <![CDATA[<]]> 5 AND DATEDIFF(ENDAT, NOW()) <![CDATA[>]]> 0 
			ORDER BY DATE
	</select>
	
	
	<!--  구글 드라이브 검색 -->
	<select id="gdSearch" parameterType="hashmap" resultType="com.dobee.vo.project.GoogleDrive">
		SELECT * FROM GOOGLEDRIVE WHERE ${option} LIKE CONCAT('%', #{searchText}, '%') AND PJTSEQ = #{pjtSeq}
	</select>


</mapper>
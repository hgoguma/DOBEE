<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dobee.dao.UserDao">
	
	<!--아이디 찾기 -->
	<select id = "findId" parameterType = "com.dobee.vo.member.User">
     SELECT U.MAIL AS MAIL FROM USERINFO AS I JOIN USER AS U ON I.MAIL=U.MAIL 
     WHERE NAME = #{name} AND PHONE=#{phone}
    </select>
	
	<!--  -->
	<select id="getUserList" resultType="com.dobee.vo.member.User">
		SELECT MAIL, NAME, MYPIC, AUTHCODE, TEAMCODE 
		FROM USER
	</select>
	
	<!-- User 정보 가져오기 -->
	<select id="getUser" resultType="com.dobee.vo.member.User">
		SELECT MAIL, PASSWORD, NAME, MYPIC, AUTHCODE FROM USER WHERE MAIL=#{mail}
	</select>
	
	
	<!-- UserInfo 정보가져오기 -->
	<select id="getUserInfoList" resultType="com.dobee.vo.member.User">
		SELECT MAIL, REGITDATE, SERVE, EMP, POSITION, PHONE FROM USERINFO
	</select>
	
	<!-- User & UserInfo 정보 가져오기 마이페이지   01.22 알파카 -->
	<select id="getUserInfo" resultType="com.dobee.vo.member.User">
		SELECT U.MAIL, U.PASSWORD, U.NAME, U.MYPIC, U.AUTHCODE, U.TEAMCODE, I.REGITDATE, I.SERVE, I.EMP, I.POSITION, I.PHONE, T.TEAMNAME
		FROM USER U
		JOIN USERINFO I 
		ON U.MAIL = I.MAIL
		JOIN TEAMLIST T
		ON U.TEAMCODE = T.TEAMCODE
		WHERE U.MAIL = #{mail}
	</select>
	
	<!-- 마이페이지 수정  01.22 알파카  public int mypageModify(User user);-->
	<update id="mypageModify" parameterType="com.dobee.vo.member.User">
		UPDATE USER U JOIN USERINFO I 
		ON U.MAIL = I.MAIL
		SET U.PASSWORD=#{password},
			I.PHONE = #{phone}
		WHERE U.MAIL = #{mail}
	</update>
	
	<!-- Ajax 출근 하기 public int onWork(String mail); -->
	<insert id="onWork">
		INSERT INTO ATTEND(ATTTIME, MAIL, ATTCODE) 
		VALUES (NOW(), (SELECT MAIL FROM USER WHERE MAIL=#{mail}), (SELECT ATTCODE FROM ATTENDCODE WHERE ATTDIV='출근'))
	</insert>
	
	
	<!-- Ajax 신청코드 불러오기 -->
	<select id="getApyCode" resultType="com.dobee.vo.ApplyCode">
		SELECT APYCODE, ENTRY FROM APPLYCODE
	</select>
	
		
	<!-- Ajax 결재자 불러오귀 // AUTHCODE=3 팀장 -->
	<select id="getApprovalList" resultType="com.dobee.vo.member.User">
		SELECT MAIL, NAME FROM USER WHERE AUTHCODE=3
	</select>
	
	
	<!-- Ajax 연장근무 년도 불러오기 -->
	<select id="overTimeYearList" parameterType="String" resultType="Integer">
		SELECT DISTINCT DATE_FORMAT(ATTTIME, '%Y') FROM ATTEND WHERE MAIL = #{param1}
	</select>
	
	
	<!-- Ajax 연장근무 월 불러오기 -->
	<select id="overTimeMonthList" parameterType="String" resultType="Integer">
		SELECT DISTINCT DATE_FORMAT(ATTTIME, '%c') FROM ATTEND WHERE MAIL = #{param1}
	</select>
	
	
	<!-- 개인_연장근무 신청하기 	0112 COMPLETE -->
	<insert id="overTimeApply" parameterType="com.dobee.vo.Apply">
		INSERT INTO APPLY (REQDATE, REASON, STARTAT, ENDAT, ISAUTH, DRAFTER, APPROVAL, APYCODE)
			VALUES (CURDATE(), #{reason}, #{startAt}, #{endAt}, '미승인', #{drafter}, #{approval}, 6)
	</insert>
	
	
	<!-- 개인_연장근무 확인/관리		0121	COMPELTE -->
	<select id="getExtList" parameterType="String" resultType="com.dobee.vo.Apply">
		SELECT APLSEQ, REQDATE, STARTAT, ENDAT, ISAUTH, APPROVAL, REASON, REJREASON
			FROM APPLY
			WHERE APYCODE = 6 AND DRAFTER = #{drafter}
	</select>
	
	<!-- 개인_연장근무 수정/삭제 (GET) - 페이지 데이터 불러오기		0121	COMPLETE -->
	<select id="getELforEdit" parameterType="com.dobee.vo.Apply" resultType="com.dobee.vo.Apply">
		SELECT APLSEQ, REQDATE, STARTAT, ENDAT, REASON, APPROVAL
			 FROM APPLY
			 WHERE APYCODE= 6 AND DRAFTER = #{drafter} AND APLSEQ = #{aplSeq}
	</select>
	
	
	<!-- 개인_연장근무 수정하기 (POST)			0120	COMPLETE -->
	<update id="postEditExtApply" parameterType="com.dobee.vo.Apply">
		UPDATE APPLY
			SET STARTAT = #{startAt},
				ENDAT = #{endAt},
	        	APPROVAL = #{approval},
	        	REASON = #{reason}
		WHERE APLSEQ = #{aplSeq} AND DRAFTER = #{drafter}
	</update>
	
	
	<!-- 개인_연장근무 신청 삭제 POST			0121 게다죽	COMPLETE -->
    <delete id="postDeleteExtList">
    	DELETE FROM APPLY WHERE APLSEQ = #{aplSeq}
    </delete>
		
	
	<!-- 개인_부재 신청하기	 0112	COMPLETE -->
	<insert id="absApply" parameterType="com.dobee.vo.Apply">
		INSERT INTO APPLY (REQDATE, REASON, STARTAT, ENDAT, USEBREAK, ISAUTH, DRAFTER, APPROVAL, APYCODE)
			VALUES (CURDATE(), #{reason}, #{startAt}, #{endAt}, #{useBreak}, '미승인', #{drafter}, #{approval}, #{apyCode})
	</insert>
	
	
	<!-- 개인 부재 신청 수정하기 (GET)	 	0120		COMPLETE -->
	<select id="getBMLforEdit" parameterType="com.dobee.vo.Apply" resultType="com.dobee.vo.member.BreakManageList">
		SELECT a.aplseq, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.USEBREAK, A.ISAUTH, A.APPROVAL, A.REASON, A.REJREASON
			FROM APPLY A
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
			WHERE A.DRAFTER=#{drafter} AND A.APLSEQ = #{aplSeq}
	</select>
	
	
	<!-- 개인 부재 신청 수정하기 (POST)		0120		COMPLETE -->
	<update id="postEditApply" parameterType="com.dobee.vo.Apply">
		UPDATE APPLY
			SET APYCODE = #{apyCode},
				STARTAT = #{startAt},
				ENDAT = #{endAt},
				USEBREAK = #{useBreak},
	        	APPROVAL = #{approval},
	        	REASON = #{reason}
		WHERE APLSEQ = #{aplSeq}
	</update>

	
	<!-- 개인_부재 신청 삭제하기 (POST)		0120			COMPLETE -->
	<delete id="deleteApply" parameterType="Integer" >
		DELETE FROM APPLY WHERE APLSEQ = #{aplSeq}
	</delete>
	
	
	<!-- Ajx 개인_부재일정 신청 - 캘린더 Event 불러오기 (싸그리)			0119 COMPLETE -->
	<select id="AbsAll" parameterType="String" resultType="com.dobee.vo.Apply">
		SELECT APLSEQ, DATE_FORMAT(STARTAT, '%Y-%m-%d %H:%i') AS STARTAT, DATE_FORMAT(ENDAT, '%Y-%m-%d %H:%i') AS ENDAT, ISAUTH, APYCODE FROM APPLY WHERE APYCODE!=6 AND DRAFTER=#{param1}
	</select>
	
	
	<!-- Ajx 개인_연장근무 신청 - 캘린더 Event 불러오기 (싸그리)			0119 COMPLETE -->
	<select id="ExtAll" parameterType="String" resultType="com.dobee.vo.Apply">
		SELECT APLSEQ, DATE_FORMAT(STARTAT, '%Y-%m-%d %H:%i') AS STARTAT, DATE_FORMAT(ENDAT, '%Y-%m-%d %H:%i') AS ENDAT, ISAUTH FROM APPLY WHERE APYCODE=6 AND DRAFTER=#{param1}
	</select>
	

	<!-- Ajax 연차 불러오기 0112 -->
	<select id="getVacationInBM" parameterType="String" resultType="com.dobee.vo.member.Break">
		SELECT TOTALBREAK, USEDBREAK FROM BREAK WHERE MAIL= #{param1}
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - Option - 년도 loading		0113 -->
	<select id="breakYearList" parameterType="String" resultType="Integer">
		SELECT DISTINCT DATE_FORMAT(STARTAT, '%Y') FROM APPLY WHERE APYCODE != 6 AND  DRAFTER= #{param1}
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - 년도별 List 출력		0113 -->
	<select id="getBreakListByYear" parameterType="String" resultType="com.dobee.vo.member.BreakManageList">
		SELECT a.aplseq, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.ISAUTH, A.APPROVAL, BL.USINGBREAK, A.REASON, A.REJREASON
			FROM APPLY A
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				LEFT OUTER JOIN BREAKLIST BL
					ON A.APLSEQ = BL.APLSEQ
			WHERE  A.APYCODE != 6 AND A.DRAFTER=#{param1} AND DATE_FORMAT(A.STARTAT, '%Y') = 2020;
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - Option - 월 loading		0113 -->
	<select id="breakYearMonthList" parameterType="String" resultType="String">
		SELECT DISTINCT DATE_FORMAT(STARTAT, '%Y-%m') AS STARTAT FROM APPLY WHERE APYCODE != 6 AND  DRAFTER=#{param1}
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - 년-월별 List 출력		0113 -->
	<select id="getBreakListByYMonth" parameterType="String" resultType="com.dobee.vo.member.BreakManageList">
		SELECT a.aplseq, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.ISAUTH, A.APPROVAL, BL.USINGBREAK, A.REASON, A.REJREASON
			FROM APPLY A	
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				LEFT OUTER JOIN BREAKLIST BL
					ON A.APLSEQ = BL.APLSEQ
			WHERE  A.APYCODE != 6 AND A.DRAFTER=#{param1} AND DATE_FORMAT(A.STARTAT, '%Y-%m') = '2020-01';
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - Option - 부재항목 loading		0113 -->
	<select id="breakEntryList" parameterType="String" resultType="com.dobee.vo.ApplyCode">
		SELECT DISTINCT AC.APYCODE, AC.ENTRY 
			FROM APPLY A
				INNER JOIN APPLYCODE AC
	        		ON A.APYCODE = AC.APYCODE
			WHERE A.APYCODE != 6 AND  A.DRAFTER=#{param1}
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - 부재항목 별 List 출력		0113 -->
	<select id="getBreakListByEntry" parameterType="String" resultType="com.dobee.vo.member.BreakManageList">
		SELECT a.aplseq, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.ISAUTH, A.APPROVAL, BL.USINGBREAK, A.REASON, A.REJREASON
			FROM APPLY A
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				LEFT OUTER JOIN BREAKLIST BL
					ON A.APLSEQ = BL.APLSEQ
			WHERE  A.DRAFTER=#{param1} AND A.APYCODE = '2';
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - Option - 승인여부 loading		0113 -->
	<select id="breakIsAuthList" parameterType="String" resultType="String">
		SELECT DISTINCT ISAUTH FROM APPLY WHERE APYCODE != 6 AND  DRAFTER=#{param1}
	</select>
	
	
	<!-- Ajax 개인부재일정확인 - 승인여부 별  List 출력		0113 -->
	<select id="getBreakListByIsAuth" parameterType="String" resultType="com.dobee.vo.member.BreakManageList">
		SELECT a.aplseq, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.ISAUTH, A.APPROVAL, BL.USINGBREAK, A.REASON, A.REJREASON
			FROM APPLY A
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				LEFT OUTER JOIN BREAKLIST BL
					ON A.APLSEQ = BL.APLSEQ
			WHERE  A.APYCODE != 6 AND A.DRAFTER=#{param1} AND A.ISAUTH = '미승인';
	</select>

	
	<!-- 개인_부재내역 불러오기 - COMPLETE -->
	<select id="absMg" parameterType="String" resultType="com.dobee.vo.member.BreakManageList">
		SELECT A.APLSEQ, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.USEBREAK, A.ISAUTH, A.APPROVAL, A.REASON, A.REJREASON
			FROM APPLY A
			    INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
		    WHERE A.APYCODE != 6 AND A.DRAFTER = #{drafter}
	</select>
	
	
	<!-- Ajax 매니저_부재관리 - Option - 부재항목 loading		0114 -->
    <select id="breakEntryListMgr" resultType="com.dobee.vo.ApplyCode">
    	SELECT DISTINCT AC.APYCODE, AC.ENTRY 
			FROM APPLY A
				INNER JOIN APPLYCODE AC
	        		ON A.APYCODE = AC.APYCODE
			WHERE A.APYCODE != 6
    </select>
    
    
    <!-- 매니저_부재관리 - 데이터 테이블 출력 (GET)		0114 COMPLETE -->
    <select id="breakListMgr" resultType="com.dobee.vo.member.BreakManageList">
    	SELECT A.APLSEQ, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.USEBREAK, A.ISAUTH, A.APPROVAL, A.REASON, A.REJREASON, A.DRAFTER, U.NAME
			FROM APPLY A
			    INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				INNER JOIN USER U
					ON A.DRAFTER = U.MAIL
		    WHERE A.APYCODE != 6
		    ORDER BY A.APLSEQ ASC
    </select>
    
    
    <!-- 매니저_부재관리 - isAuth update (POST)		0115 COMPLETE -->
    <update id="absReqHandle" parameterType="com.dobee.vo.Apply">
    	UPDATE APPLY SET REJREASON = #{rejReason}, ISAUTH = #{isAuth} WHERE APLSEQ = #{aplSeq}
    </update>
	
	
    <!-- 매니저_연장근무 관리 - 데이터 테이블 출력 (GET)		0115 COMPLETE -->
    <select id="extListMgr" resultType="com.dobee.vo.member.BreakManageList">
    	SELECT A.APLSEQ, U.NAME, AC.ENTRY, A.REQDATE, A.STARTAT, A.ENDAT, A.ISAUTH, A.DRAFTER, A.APPROVAL, BL.USINGBREAK, A.REASON, A.REJREASON
			FROM APPLY A
				INNER JOIN APPLYCODE AC
					ON A.APYCODE = AC.APYCODE
				LEFT OUTER JOIN BREAKLIST BL
					ON A.APLSEQ = BL.APLSEQ
				INNER JOIN USER U
					ON A.DRAFTER = U.MAIL
			WHERE A.APYCODE = 6
			ORDER BY A.APLSEQ ASC
    </select>
    
    
    <!-- 매니저_부재관리 - isAuth update (POST)		0115 COMPLETE -->
    <update id="extReqHandle" parameterType="com.dobee.vo.Apply">
    	UPDATE APPLY SET REJREASON = #{rejReason}, ISAUTH = #{isAuth} WHERE APLSEQ = #{aplSeq}
    </update>
	
	
	<!-- 권한목록 불러오기 -->
	<select id="getAuthority" resultType="com.dobee.vo.member.Authority">
		SELECT AUTH, AUTHCODE FROM AUTHORITY
	</select>
	
	
	<!-- 팀목록 불러오기 -->
	<select id="getTeamList" resultType="com.dobee.vo.member.TeamList">
		SELECT TEAMCODE, TEAMNAME FROM TEAMLIST
	</select>
	
	
	<!-- 사원등록 -->
	<insert id="addUser" parameterType="com.dobee.vo.member.User">
		INSERT INTO USER (MAIL, NAME, MYPIC, AUTHCODE, TEAMCODE) VALUES (#{mail},#{name},#{myPic},#{authCode},#{teamCode})
	</insert>
	
	<!-- 사원정보등록 -->
	<insert id="addUserInfo" parameterType="com.dobee.vo.member.User">
		INSERT INTO USERINFO (MAIL, REGITDATE, SERVE, EMP, POSITION, PHONE) VALUES (#{mail},'2020-01-20',#{serve},#{emp},#{position},#{phone})
	</insert>
	
	
	<!-- 비밀번호등록 -->
	<update id="resetPwd" parameterType="com.dobee.vo.member.User">
		UPDATE USER SET PASSWORD=#{password} WHERE MAIL=#{mail}
	</update>
	
	
	<!-- 팀 리스트 조회 -->
	<select id="teamList" resultType="com.dobee.vo.member.TeamList">
		SELECT TEAMCODE, TEAMNAME FROM TEAMLIST ORDER BY TEAMCODE ASC
	</select>
	
	
	<!-- 팀 조회 -->
	<select id="getTeam" resultType="com.dobee.vo.member.TeamList">
		SELECT TEAMCODE, TEAMNAME FROM TEAMLIST WHERE TEAMCODE=#{teamCode}
	</select>
</mapper>
/**
 * 휴일관리
 * @package egovframework.com.ilock.cmm.util
 * @file HoliDateUtil.java
 * @author 
 * @date 2016. 10. 6. 오후 1:11:35
 * @version 1.0 
 * @see
 *
 * <pre>
 
 *   수정일          수정자         수정내용 
 *  -------       --------     --------------------------- 
 *  2016. 10. 6.            최초 생성 
 * 
 * Copyright (C) 2016 by (주)에스위너스 All right reserved.
 *
 * </pre>
 */
package egovframework.com.ilock.cmm.util;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ibm.icu.util.ChineseCalendar;

import egovframework.com.ilock.common.service.ComCalnedarVO;

public class HoliDateUtil {
	public static Map<String, String> solarHolidayMap = new HashMap<String, String>();
    public static Map<String, String> lunarHolidayMap = new HashMap<String, String>();
 
    public static String getDateByString(Date date) {
        return getDateByString(date, "-");
    }
 
    public static String getDateByString(Date date, String separator) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy"+separator+"MM"+separator+"dd");
        return sdf.format(date);
    }
 
    /**
     * 양력날짜를 음력날짜로 변환
     * @param 양력날짜 (yyyyMMdd)
     * @return 음력날짜 (yyyyMMdd)
     */
    @SuppressWarnings("unused")
	private static String converSolarToLunar(String date) throws Exception{
        return converSolarToLunar(date, "-");
    }
 
    private static String converSolarToLunar(String date, String separator) {
        ChineseCalendar cc = new ChineseCalendar();
        Calendar cal = Calendar.getInstance();
 
        cal.set(Calendar.YEAR, Integer.parseInt(date.substring(0, 4)));
        cal.set(Calendar.MONTH, Integer.parseInt(date.substring(4, 6)) - 1);
        cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(date.substring(6)));
 
        cc.setTimeInMillis(cal.getTimeInMillis());
 
        int y = cc.get(ChineseCalendar.EXTENDED_YEAR) - 2637;
        int m = cc.get(ChineseCalendar.MONTH) + 1;
        int d = cc.get(ChineseCalendar.DAY_OF_MONTH);
 
        StringBuffer ret = new StringBuffer();
        ret.append(String.format("%04d", y)).append(separator);
        ret.append(String.format("%02d", m)).append(separator);
        ret.append(String.format("%02d", d));
 
        return ret.toString();
    }
 
    public static String getDay(String date, int amount) {
        Calendar cal = Calendar.getInstance();
        cal.set(Integer.parseInt(date.substring(0, 4)), Integer.parseInt(date.substring(4, 6)) - 1, Integer.parseInt(date.substring(6)));
        cal.add(Calendar.DAY_OF_MONTH, amount);
 
        return getDateByString(cal.getTime(), "");
    }
    
    public static List<ComCalnedarVO> getHolidayList(int year, int endYear) throws Exception{
    	List<ComCalnedarVO> list = new ArrayList<ComCalnedarVO>();
    	
    	solarHolidayMap.put("0101", "신정"); solarHolidayMap.put("0301", "삼일절");
        solarHolidayMap.put("0505", "어린이날"); solarHolidayMap.put("0606", "현충일");
        solarHolidayMap.put("0815", "광복절"); solarHolidayMap.put("1003", "개천절");
        solarHolidayMap.put("1009", "한글날"); solarHolidayMap.put("1225", "성탄절");
 
        lunarHolidayMap.put("0101", "설날"); lunarHolidayMap.put("0102", "설날");
        lunarHolidayMap.put("0408", "석가탄신일"); lunarHolidayMap.put("0814", "추석");
        lunarHolidayMap.put("0815", "추석"); lunarHolidayMap.put("0816", "추석");
 
        Calendar c = Calendar.getInstance();
        c.set(year, 0, 1); // 1월 1일부터 시작
 
        String solarDate = "";
        String lunarDate = "";
        for(int i=year; i<=endYear;) {
            solarDate = getDateByString(c.getTime(), "");
            lunarDate = converSolarToLunar(solarDate, "");
 
            c.add(Calendar.DAY_OF_MONTH, 1);
 
            // 양력휴일 체크
            String solarMmdd = solarDate.substring(4,8);
            int cnt=0;
            if(solarHolidayMap.containsKey(solarMmdd)) {
            	ComCalnedarVO vo = new ComCalnedarVO();
            	vo.setStart(solarDate.substring(0, 4) + "-" + solarDate.substring(4, 6) + "-" + solarDate.substring(6, 8));
            	vo.setEnd(solarDate.substring(0, 4) + "-" + solarDate.substring(4, 6) + "-" + solarDate.substring(6, 8));
            	vo.setTitle(solarHolidayMap.get(solarMmdd));
            	vo.setColor("FF0000");
            	vo.setCode("0");
    			list.add(cnt, vo);
            	cnt++;
            }
            
            // 음력휴일 체크
            String lunarMmdd = lunarDate.substring(4,8);
            if(lunarHolidayMap.containsKey(lunarMmdd)) {
            	ComCalnedarVO vo = new ComCalnedarVO();
                if(lunarMmdd.equals("0101")){
                	ComCalnedarVO vo2 = new ComCalnedarVO();
                	vo2.setTitle("설날");
                	vo2.setStart(getDay(solarDate, -1).substring(0, 4) + "-" + getDay(solarDate, -1).substring(4, 6) + "-" + getDay(solarDate, -1).substring(6, 8));
                	vo2.setEnd(getDay(solarDate, -1).substring(0, 4) + "-" + getDay(solarDate, -1).substring(4, 6) + "-" + getDay(solarDate, -1).substring(6, 8));
                	vo2.setColor("FF0000");
                	vo2.setCode("0");
                	list.add(cnt, vo2);
                	cnt++;
                }
                vo.setTitle(lunarHolidayMap.get(lunarMmdd));
            	vo.setStart(solarDate.substring(0, 4) + "-" + solarDate.substring(4, 6) + "-" + solarDate.substring(6, 8));
            	vo.setEnd(solarDate.substring(0, 4) + "-" + solarDate.substring(4, 6) + "-" + solarDate.substring(6, 8));
            	vo.setColor("FF0000");
            	vo.setCode("0");
            	//System.out.println(getDay(solarDate, -1) + " ==> 설날");
                //System.out.println(solarDate + " ==> " + lunarHolidayMap.get(lunarMmdd));
    			list.add(cnt, vo);
            	cnt++;
            }
 
            year = c.get(Calendar.YEAR);
            if(year != i) {
                i++;
            }
            if(i > endYear) break;
        }
        return list;
	}
}
